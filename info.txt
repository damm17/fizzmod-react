profe : horacio.estevez@gmail.com
slack : fizzmod-frontend
https://github.com/HoracioGutierrez/fizzmod-front-end

· git clone (url) .     
[Clonar el repositorio en local]

· git status   
[Chequear el estado para ver si hay commits pendientes o archivos sin trackear]

· git add -A    
[Trackear todos los archivos]

. git commit -m "(mensaje para el commit)"      
[Hacer un commit]

· git pull origin master        
[Hacer un pull del repositorio y actualizar archivos locales. En este caso del branch "master"]

· git push origin master        
[Hacer un push y subir los cambios locales al repositorio. En este caso hacia el branch "master"]

· git branch (nombre del branch)        
[Crear un nuevo branch, en base a dónde estemos parados (master en general)]

· git checkout (nombre del branch)      
[Cambiar de branch]

· git log       
[Resumen de los commits que se fueron haciendo sobre el repositorio]

· git merge (nombre de la rama con cambios)         
[Primero hago un checkout a master, luego el merge para unir la rama con el directorio principal.]

· git branch -d/-D (nombre de la rama)      
[Borrar una rama de forma local]

· git push origin --delete (nombre de la rama)      
[Borrar la rama del repositorio] 

git revert <commit> : Revierte los cambios de uno o mas commits o un branch entero generando mas historial en el grafo. Ideal cuando lo que quiero revertir ya esta pusheado. 

git reset <TIPO> <commit> : 

TIPOS :

    --soft : Mueve el HEAD a un commit anterior y mantiene el estado del WD y el SA

    --mixed : DEFAULT - Mueve el HEAD a un commit anterior y no mantiene el estado del WD y el SA pero si mantiene los cambios.

    --hard : Mueve el HEAD a un commit anterior y no mantiene ningun cambio


git reflog : Nos muestra un log de acciones de hasta 30 dias

blob : Hace referencia a un archivo 
tree : Hace referencia a un directorio. Contiene Blobs
commit : Hace referencia a un tree y/o blob. 
tag : 

    -no anotados : Genera comentarios dentro del WD pero no agrega nada al historial

    -anotados : Generan un objeto nuevo en el historial y apuntan a commits 

git tag -a <nombre> -m <subject> : Genera un tag anotado , una version de lanzamiento del proyecto. Estos se pushean aparte. 

git stash : es un espacio temporal donde guardar trabajo que no queremos commitear. Este trabajo se puede restaurar en cualquier momento sobre cualquier branch. 


http://vanilla-js.com/
http://latentflip.com/loupe/
https://www.youtube.com/watch?v=8aGhZQkoFbQ
https://www.youtube.com/watch?v=cCOL7MC4Pl0
https://www.youtube.com/watch?v=XQM0K6YG18s